#!/usr/bin/perl -w
#
#  This is our global blacklisting plugin, which allows a mail to be
# rejected (and thus bounced) even if it failed none of our previous checks.
#
#  A mail may be blacklisted based upon the envelope sender or the
# originating IP address.
#
# Steve
# --
#



use Qpsmtpd::Constants;




=begin doc

  Blacklist on a per-domain basis.

=end doc

=cut

sub hook_data_post
{
    my ( $self, $transaction ) = (@_);

    #
    # Get the sending IP address & hostname.
    #
    my $remote_ip   = $self->qp->connection->remote_ip;
    $remote_ip      = lc($remote_ip) if ( $remote_ip );

    my $remote_host = $self->qp->connection->remote_host;
    $remote_host    = lc($remote_host) if ( $remote_host );

    #
    # Get the domain this mail is for - this domain is setup
    # in the 'test_recipient' plugin
    #
    my $domain = $transaction->notes("DOMAIN") || undef;
    return DECLINED unless ( defined($domain) );

    #
    #  Is the IP blacklisted?
    #
    if ( ( -e "/srv/$domain/blacklisted/ips/$remote_ip" )  ||
         ( -e "/srv/_global_/blacklisted/ips/$remote_ip" ) ||
         ( -e "/etc/blacklist.d/" . $remote_ip ) )
    {

        #
        #  Reject.
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason",
                             "IP address $remote_ip locally blacklisted" );

        return DECLINED;
    }

    #
    # Is the host blacklisted?  Useful for companies which have
    # static reverse DNS setup for customers. e.g
    #
    #   X-REMOTE-IP: 85.17.165.245
    #   X-REMOTE-HOST: hosted-by.leaseweb.com
    #
    if ( ( -e "/srv/$domain/blacklisted/hosts/$remote_host" )  ||
         ( -e "/srv/_global_/blacklisted/hosts/$remote_host" ) )
    {

        #
        #  Reject.
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason",
                             "Hostname $remote_host locally blacklisted" );
        return DECLINED;
    }

    #
    # Get the sender address, stripping brackets if present
    #
    my $sender = $transaction->notes("MAIL-FROM") || "<>";
    $sender = lc($sender);
    $sender =~ s/^<//g;
    $sender =~ s/>$//g;

    #
    # Domain of sender
    #
    my $sDomain = undef;
    if ( $sender =~ /^(.*)@(.*)$/ )
    {
        $sDomain = $2;
    }


    #
    #  Is the sender blacklisted?
    #
    if ( length($sender) &&
         ( ( -e "/srv/$domain/blacklisted/senders/$sender" ) ||
            ( -e "/srv/_global_/blacklisted/senders/$sender" ) ) )
    {

        #
        #  OK this was from a blacklisted sender; reject.
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason", "Mail not accepted for delivery blacklisted sender - $sender" );
        return DECLINED;
    }

    #
    #  Is the sender's whole domain blacklisted?
    #
    if ( defined($sDomain) &&
         ( ( -e "/srv/$domain/blacklisted/domains/$sDomain" ) ||
            ( -e "/srv/_global_/blacklisted/domains/$sDomain" ) ) )
    {
        #
        #  OK this was from a blacklisted domain; reject
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason", "Mail not accepted for delivery - Disk too full - Domain $sDomain" );
        return DECLINED;
    }


    #
    #  Is the sending TLD blacklisted?
    #
    my $tld = $remote_host;
    if ( $tld =~ /^(.*)\.([^.]+)$/ )
    {
        $tld = $2;
    }

    #
    #  If we did pull out a TLD then check to see if it blacklisted too.
    #
    if ( $tld !~ /\./ )
    {
        #
        #  Global or per-domain rejection.
        #
        if ( ( -e "/srv/$domain/blacklisted/tld/$tld" ) ||
             ( -e "/srv/_global_/blacklisted/tld/$tld" ) )
        {
            #
            #  OK this was from a blacklisted TLD; reject
            #
            $transaction->notes( "reject", 1 );
            $transaction->notes( "reason", "Blacklisted TLD: $tld" );
            return DECLINED;
        }
    }


    #
    #  Not blacklisted.
    #
    return DECLINED;
}
