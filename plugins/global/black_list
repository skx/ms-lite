#!/usr/bin/perl -w
#
#  This is our global blacklisting plugin, which allows a mail to be
# rejected (and thus bounced) even if it failed none of our previous checks.
#
#  A mail may be blacklisted based upon the envelope sender or the
# originating IP address.
#
# Steve
# --
#



use Qpsmtpd::Constants;




=begin doc

  Blacklist on a per-domain basis.

=end doc

=cut

sub hook_data_post
{
    my ( $self, $transaction ) = (@_);

    #
    # Get the sending IP address.
    #
    my $remote_ip = $self->qp->connection->remote_ip;

    #
    # Get the domain this mail is for - this domain is setup
    # in the 'test_recipient' plugin
    #
    my $domain = $transaction->notes("domain") || undef;
    return DECLINED unless ( defined($domain) );

    #
    #  Is the IP blacklisted?
    #
    if ( ( -e "/srv/$domain/blacklisted/ips/$remote_ip" ) ||
         ( -e "/srv/_global_/blacklisted/ips/$remote_ip" ) )
    {

        #
        #  Reject.
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason",
                             "IP address $remote_ip locally blacklisted" );

        return DECLINED;
    }

    #
    # Get the sender address, stripping brackets if present
    #
    my $sender = $transaction->notes("MAIL-FROM") || "<>";
    $sender = lc($sender);
    $sender =~ s/^<//g;
    $sender =~ s/>$//g;

    #
    #  Is the sender blacklisted?
    #
    if ( length($sender) &&
         ( ( -e "/srv/$domain/blacklisted/senders/$sender" ) ||
            ( -e "/srv/_global_/blacklisted/senders/$sender" ) ) )
    {

        #
        #  OK this was from a blacklisted sender; reject.
        #
        $transaction->notes( "reject", 1 );
        $transaction->notes( "reason", "Mail not accepted for delivery." );
        return DECLINED;
    }

    #
    #  Not blacklisted.
    #
    return DECLINED;
}
