#!/usr/bin/perl
#
# Block mail from clients without RDNS - for IPv4 clients.
#
#


use Qpsmtpd::Constants;


sub hook_data_post
{
    my ( $self, $transaction ) = (@_);


    #
    # If the mail is rejected terminate quickly
    #
    if ( ( $transaction->notes("reject") || 0 ) == 1 )
    {
        $self->log( LOGWARN,
                    $self->plugin_name() .
                      ": terminating as mail is already rejected"
                  );
        return DECLINED;
    }



    #
    # Get the domain this mail is for - this domain is setup
    # in the 'test_recipient' plugin
    #
    my $domain = $transaction->notes("DOMAIN") || undef;
    return DECLINED unless ( defined($domain) );



    #
    # If this check isn't enabled then return immediately
    #
    if (
         !( ( -e "/srv/$domain/checks/rdns" ) ||
            ( -e "/srv/$domain/checks/rdns4" ) ||
            ( -e "/srv/$domain/checks/all" ) ) )
    {
        $self->log( LOGWARN,
                $self->plugin_name() . ": plugin disabled for domain $domain" );
        return DECLINED;
    }


    my $ip   = $self->qp->connection->remote_ip;
    my $host = $self->qp->connection->remote_host;

    #
    #  If this is an IPv6 host we'll skip it.
    #
    return DECLINED if ( $ip =~ /:/ );


    if ( ( $ip eq $host ) ||
         ( $host =~ /^unknown$/i ) )
    {
        $self->log( LOGWARN, "No reverse DNS for IP:$ip [$host]" );

        $transaction->notes( "reject",  1 );
        $transaction->notes( "blocker", $self->plugin_name() );
        $transaction->notes( "reason",
                             "Missing reverse DNS for IP:$ip [$host]" );
        return DECLINED;
    }

    #
    #  Terminate.
    #
    $self->log( LOGWARN,
           $self->plugin_name() . ": plugin passed mail will not be rejected" );

    return DECLINED;
}




#
# End of plugin
#
1;
